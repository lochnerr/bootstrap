#!/bin/sh

set -e

# bootstrap-install: Script to install or update the bootstrap files.

if [ "$(id -u)" != "0" ]; then
  echo "Error: Must be root (id = '$UID')!"
  exit 1
fi

install_bootstrap() {

  # Determine the source directory.
  PFX="."
  [ -e bin/bootstrap.service ] && PFX="bin"

  # Copy the files.  When running under cloud-init, these files should have already been copied.
  cp -p $PFX/bootstrap.service  /usr/lib/systemd/system/
  cp -p $PFX/bootstrap-shutdown /usr/local/bin/
  cp -p $PFX/bootstrap-startup  /usr/local/bin/

  # Set file ownership.
  chown root:root /usr/lib/systemd/system/bootstrap.service
  chown root:root /usr/local/bin/bootstrap-shutdown
  chown root:root /usr/local/bin/bootstrap-startup

  if command -v restorecon >/dev/null 2>&1 ; then
    # Make sure selinux is happy.
    restorecon  /usr/lib/systemd/system/bootstrap.service
    restorecon  /usr/local/bin/bootstrap-shutdown
    restorecon  /usr/local/bin/bootstrap-startup
  fi

  # Enable the bootstrap service now!
  if command -v apk >/dev/null 2>&1 ; then
    echo "Info: Enabling bootstrap service under OpenRC."
    rc-update add bootstrap default || :
  else
    echo "Info: Enabling bootstrap service under SystemD."
    systemctl enable bootstrap.service || :
  fi
}

echo >/var/log/bootstrap-install.log

$PFX/secure-sshd         | tee -a /var/log/bootstrap-install.log
# Write the results of securing sshd to the system log so that in a hosted
# environment (e.g. aws) it can be verified that it ran correctly.  Or, what
# went wrong if it failed.
logger -t bootstrap -f /var/log/bootstrap-install.log || :
install_bootstrap   | tee -a /var/log/bootstrap-install.log

echo "$(date +%Y/%m/%d) Bootstrap service install completed!"   | tee -a /var/log/bootstrap-install.log

