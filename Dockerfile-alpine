FROM alpine:latest

LABEL MAINTAINER Richard Lochner, Clone Research Corp. <lochner@clone1.com> \
      org.label-schema.name = "bootstrap \
      org.label-schema.description = "Generic bootstrap scripts for bringing up Linux services on bare-metal, VM's and containers." \
      org.label-schema.vendor = "Clone Research Corp" \
      org.label-schema.usage = "https://github.com/lochnerr/bootstrap" \
      org.label-schema.url = "https://certbot.eff.org/about/" \
      org.label-schema.vcs-url = "https://github.com/lochnerr/bootstrap.git"

# Generic bootstrap scripts for bringing up Linux services on bare-metal, VM's and containers.

# The goal of this project is to provide a way to create generic linux images that reduce the devops burden
# associated with deploying, updating and backing-up custom servers and containers.  For instance, a single
# image can be used deploy any number of services.

# Volumes:
#  * /srv/bootstrap - directory for configuration and data files.
#
# Exposed ports:
#  None
#
# Linux capabilities required:
#  None

# Add packages.
RUN apk add --update  --no-cache openrc

# The persistent volume for samba and named.
VOLUME /srv/bootstrap

# Use openrc init to bring up services.
CMD [ "/sbin/init" ]

# Enable OpenRC in Alpine.
RUN true \
    # Disable getty's
    && sed -i 's/^\(tty\d\:\:\)/#\1/g' /etc/inittab \
    && sed -i \
        # Change subsystem type to "docker"
        -e 's/#rc_sys=".*"/rc_sys="docker"/g' \
        # Allow all variables through
        -e 's/#rc_env_allow=".*"/rc_env_allow="\*"/g' \
        # Start crashed services
        -e 's/#rc_crashed_stop=.*/rc_crashed_stop=NO/g' \
        -e 's/#rc_crashed_start=.*/rc_crashed_start=YES/g' \
        # Define extra dependencies for services
        -e 's/#rc_provide=".*"/rc_provide="loopback net"/g' \
        /etc/rc.conf \
    # Remove unnecessary services
    && rm -f /etc/init.d/hwdrivers \
            /etc/init.d/hwclock \
            /etc/init.d/hwdrivers \
            /etc/init.d/modules \
            /etc/init.d/modules-load \
            /etc/init.d/modloop \
    # Can't do cgroups
    && sed -i 's/\tcgroup_add_service/\t#cgroup_add_service/g' /lib/rc/sh/openrc-run.sh \
    && sed -i 's/VSERVER/DOCKER/Ig' /lib/rc/sh/init.sh

# Copy the script files and other artifacts.
COPY bin/. /usr/local/bin/

# Copy the openrc samba service.
COPY bootstrap /etc/init.d/

# Set systemd stop signal.
STOPSIGNAL TERM

RUN rc-update add bootstrap default

# Set the build labels.
# Do this last to allow build cacheing during development.
ARG BUILD_DATE
ARG VCS_REF
LABEL org.label-schema.build-date = $BUILD_DATE \
      org.label-schema.vcs-ref = $VCS_REF

